SELECT 
    PROP.SB_ID AS SB_ID,
    REVIEWER.SB_NO,
    REVIEWER.SB_VERSION AS SB_VER,
    REVIEWER.NAME,
    PROP.PROJECT_ROLE,
    PROP.SECONDARY_ROLE,
    REVIEWER.GROUP_DESCRIPTION,
    PROP.REVISION,
    PROP.SB_VERSION_ID,    
    PROP.SUB_NAME,
    PROP.CHANGE_NUMBER,
    PROP.ACCEPTANCE_STATUS,   
    PROP.PRODUCT_LINE,
    PROP.PRODUCT_ID,
    PROP.TITLE,
    PROP.MEMBER_ID,
    PROP.ROLE_SECURITY_ID,
    REVIEWER.REVIEWER_ROLE,
    REVIEWER.REVIEWER_ID,
    TO_CHAR(PROP.DUE_DATE, 'mm/dd/yyyy') AS DUE_DATE,
    TO_CHAR(PROP.START_DATE, 'mm/dd/yyyy') AS START_DATE,
    TO_CHAR(PROP.FINAL_DATE, 'mm/dd/yyyy') AS FINAL_DATE,
    TO_CHAR(PROP.CERT_DUE_DATE, 'mm/dd/yyyy') AS CERT_DUE_DATE,
    TO_CHAR(PROP.ROUTE_DATE, 'mm/dd/yyyy') AS ROUTE_DATE,
    TO_CHAR(PROP.PRIMARY_ROUTE_DATE, 'mm/dd/yyyy') AS PRIMARY_ROUTE_DATE,
    (SELECT NAME FROM SECURITY_TABLE WHERE REVIEWER.MANAGER_ID = SECURITY_TABLE.MEMBER_ID) AS MANAGER_NAME
FROM
    (SELECT
        VERSION.SB_ID,
        VERSION.SB_NO,
        REVISION.SB_VERSION,
        REVISION.ROLE_SECURITY_ID,
        NVL(REVISION.REVIEWER_ROLE, 0) AS REVIEWER_ROLE,
        REVISION.MEMBER_ID,
        REVISION.NAME,
        REVISION.MANAGER_ID,
        REVISION.GROUP_DESCRIPTION,
        REVISION.REVIEWER_ID,
        REVISION.STATUS
    FROM
        (SELECT
            REV.SB_ID,
            BULLETIN.SB_NO,
            REV.MEMBER_ID,
            MAX(REV.REVIEWER_ID) AS REVIEWER_ID,
            REV.ROLE_SECURITY_ID,
            REV.GROUP_SECURITY_ID,
            REV.REVIEWER_ROLE
        FROM 
            REVIEWER_TABLE REV,
            BULLETIN_TABLE BULLETIN
        WHERE 
            REV.SB_ID = BULLETIN.SB_ID 
            AND BULLETIN.STATUS_ID = '1'
        GROUP BY
            REV.SB_ID,
            BULLETIN.SB_NO,
            REV.MEMBER_ID,
            REV.ROLE_SECURITY_ID,
            REV.GROUP_SECURITY_ID,
            REV.REVIEWER_ROLE) VERSION,
        (SELECT 
            REV.SB_ID,
            BULLETIN.SB_NO,
            VERSION.SB_VERSION,
            REV.REVIEWER_ID,
            REV.ROLE_SECURITY_ID,
            NVL(REV.REVIEWER_ROLE, 0) AS REVIEWER_ROLE,
            REV.MEMBER_ID,
            SEC.NAME,
            BULLETIN.MANAGER_ID,
            GROUPS.GROUP_DESCRIPTION,
            REV.STATUS      
        FROM 
            REVIEWER_TABLE REV,
            BULLETIN_TABLE BULLETIN,
            ROLE_TABLE ROLE,
            ROLE_SECURITY_TABLE ROLE_SEC,
            SECURITY_TABLE SEC,
            BULLETIN_VERSION_TABLE VERSION,
            GROUP_TABLE GROUPS,
            GROUP_SECURITY_TABLE GROUP_SEC
        WHERE 
            REV.SB_ID = BULLETIN.SB_ID
            AND REV.ROLE_SECURITY_ID = ROLE_SEC.ROLE_SECURITY_ID
            AND ROLE_SEC.ROLE_ID = ROLE.ROLE_ID
            AND REV.MEMBER_ID = SEC.MEMBER_ID
            AND REV.SB_ID = VERSION.SB_ID
            AND REV.SB_VERSION_ID = VERSION.SB_VERSION_ID
            AND REV.GROUP_SECURITY_ID = GROUP_SEC.GROUP_SECURITY_ID
            AND GROUP_SEC.GROUP_ID = GROUPS.GROUP_ID
            AND BULLETIN.DATE_RELEASED IS NULL
        ) REVISION
    WHERE
        VERSION.SB_ID = REVISION.SB_ID
        AND VERSION.SB_NO = REVISION.SB_NO
        AND VERSION.REVIEWER_ID = REVISION.REVIEWER_ID
        AND REVISION.STATUS = '1'
        AND VERSION.SB_NO NOT IN ('963-96-9633', '878-78-7878', '737-34-7777')
    ) REVIEWER
LEFT JOIN 
    (SELECT  
        REV.SB_ID,
        VERSION.SB_VERSION,
        VERSION.SB_VERSION_ID,
        BULLETIN.REVISION,
        BULLETIN.SUB_NAME,
        BULLETIN.CHANGE_NUMBER,
        REV.MEMBER_ID,
        REV.ROLE_SECURITY_ID,
        NVL(REV.REVIEWER_ROLE, '0') AS REVIEWER_ROLE,
        BULLETIN.PRODUCT_ID,
        BULLETIN.TITLE,
        BULLETIN.SB_NO,
        ROLE.DESCRIPTION AS PROJECT_ROLE,
        DECODE(REV.REVIEWER_ROLE, '1', 'Prime', '2', 'Support', 'NA') AS SECONDARY_ROLE,
        DECODE(SEC.IS_ACTIVE, '1', 'Yes', '0', 'No') AS IS_ACTIVE,
        BULLETIN.DUE_DATE,
        BULLETIN.START_DATE,
        BULLETIN.FINAL_DATE,
        BULLETIN.CERT_DUE_DATE,
        BULLETIN.ROUTE_DATE,
        DECODE(REV.ACCEPTANCE_STATUS, '1', 'Open', '2', 'Accepted', '3', 'Not Affected') AS ACCEPTANCE_STATUS,
        DECODE(BULLETIN.PRODUCT_LINE_ID, '1', 'Product A', '2', 'Product B', '3', 'Product C') AS PRODUCT_LINE,
        BULLETIN.PRIMARY_ROUTE_DATE
    FROM
        BULLETIN_TABLE BULLETIN,
        ROLE_TABLE ROLE,
        SECURITY_TABLE SEC,
        ROLE_SECURITY_TABLE ROLE_SEC,
        REVIEWER_TABLE REV,
        BULLETIN_VERSION_TABLE VERSION
    WHERE   
        REV.SB_ID = BULLETIN.SB_ID
        AND REV.ROLE_SECURITY_ID = ROLE_SEC.ROLE_SECURITY_ID
        AND ROLE_SEC.ROLE_ID = ROLE.ROLE_ID
        AND REV.MEMBER_ID = SEC.MEMBER_ID
        AND REV.SB_ID = VERSION.SB_ID
        AND REV.SB_VERSION_ID = VERSION.SB_VERSION_ID
    ) PROP
ON PROP.SB_ID = REVIEWER.SB_ID
AND PROP.SB_NO = REVIEWER.SB_NO
AND PROP.SB_VERSION = REVIEWER.SB_VERSION
AND PROP.ROLE_SECURITY_ID = REVIEWER.ROLE_SECURITY_ID
AND PROP.REVIEWER_ROLE = REVIEWER.REVIEWER_ROLE
AND PROP.MEMBER_ID = REVIEWER.MEMBER_ID
AND PROP.REVIEWER_ID = REVIEWER.REVIEWER_ID;
